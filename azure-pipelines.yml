# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: business_logic_microservice-Docker_container-CI_new

jobs:

- job: BuildPushImage
  displayName: Build and Push Images

  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: Docker@0
    displayName: Build Image
    inputs:
      containerregistrytype: Container Registry
      dockerRegistryConnection: DockerHub
      dockerFile: '.dockerfile'
      imageName: 'faustoarcidiacono/tt_micro_bl:$(Build.SourceBranchName)-$(Build.BuildId)'
      qualifyImageName: false
  - task: Docker@0
    displayName: Push an image
    inputs:
      containerregistrytype: Container Registry
      dockerRegistryConnection: DockerHub
      action: Push an image
      imageName: 'faustoarcidiacono/tt_micro_bl:$(Build.SourceBranchName)-$(Build.BuildId)'
      qualifyImageName: false

- job: DeployImage
  displayName: Deploy container to Kubernetes

  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: Kubernetes@1
    inputs:
      connectionType: 'Kubernetes Service Connection'
      kubernetesServiceEndpoint: 'TalkTalk Elixir'
      namespace: 'staging'
      command: apply
      secretType: dockerRegistry
      containerRegistryType: Container Registry
      dockerRegistryEndpoint: DockerHub
      arguments: '-f faustoarcidiacono/tt_micro_bl:$(Build.SourceBranchName)-$(Build.BuildId)'

trigger:
  branches:
    include:
      - "master"
